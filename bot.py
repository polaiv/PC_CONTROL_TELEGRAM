import for_keyboard
import keyboard
import telebot
import config
from sound import Sound
import pyautogui
from telebot import types
import os
import time
import ctypes
import pyaudio
import wave
import tkinter
import customtkinter
import math
import cv2
import _thread
import threading
import wmi
import pythoncom
from datetime import datetime
from bs4 import BeautifulSoup
import requests
import subprocess
import win10toast
import sys
import openai
import winsound
import json
import webbrowser
from urllib.parse import urlparse
import random
import pharases
import win32api
import win32gui
import json 
from googletrans import Translator
from base64 import b64decode
import mouse
import pyttsx3
import shutil
import tempfile
import pyscreeze

openai.api_key = 'API –∫–ª—é—á –æ—Ç OPEN AI'



url = 'https://yandex.ru/pogoda/–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞' # —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
response = requests.get(url)
bs = BeautifulSoup(response.text, 'lxml')
weather = bs.find('span', class_='temp__value temp__value_with-unit')


the_time = time.asctime()
the_time = the_time[11:-8]



MONITOR_BRIGHTNESS_API = 0x10
BRIGHTNESS_GET = 0x1
BRIGHTNESS_SET = 0x2

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞ –º–æ–Ω–∏—Ç–æ—Ä–∞
def get_monitor_handle():
    return ctypes.windll.user32.MonitorFromWindow(None, MONITOR_BRIGHTNESS_API)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —è—Ä–∫–æ—Å—Ç–∏ –º–æ–Ω–∏—Ç–æ—Ä–∞
def get_current_brightness():
    handle = get_monitor_handle()
    current_brightness = ctypes.c_ulong()
    ctypes.windll.dxva2.GetMonitorBrightness(handle, ctypes.byref(current_brightness))
    return current_brightness.value

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —è—Ä–∫–æ—Å—Ç–∏ –º–æ–Ω–∏—Ç–æ—Ä–∞ (brightness_percent - –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0 –¥–æ 100)
def set_brightness(brightness_percent):
    handle = get_monitor_handle()
    new_brightness = int(0xFFFF * brightness_percent / 100)
    ctypes.windll.dxva2.SetMonitorBrightness(handle, new_brightness)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏ –º–æ–Ω–∏—Ç–æ—Ä–∞ –Ω–∞ 2
def increase_brightness():
    current_brightness = get_current_brightness()
    new_brightness = min(current_brightness + 2, 100)
    set_brightness(new_brightness)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–Ω–∏–∂–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏ –º–æ–Ω–∏—Ç–æ—Ä–∞ –Ω–∞ 2
def decrease_brightness():
    current_brightness = get_current_brightness()
    new_brightness = max(current_brightness - 2, 0)
    set_brightness(new_brightness)


def press(message):
    try:
        keyboard.send(f'{message.text.lower()}')
        bot.send_message(message.chat.id, f"–ö–Ω–æ–ø–∫–∞ {message.text} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞–∂–∞—Ç–∞‚úÖ")
    except:
        bot.send_message(message.chat.id, "–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π‚ùå")


def set_brightness(brightness_level):
    # –ü–æ–ª—É—á–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∞
    monitor_handle = ctypes.windll.user32.MonitorFromWindow(None, 1)

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è—Ä–∫–æ—Å—Ç–∏ –º–æ–Ω–∏—Ç–æ—Ä–∞
    monitor_info = ctypes.Structure(ctypes.c_ulong, ctypes.c_ulong, ctypes.wintypes.RECT)
    ctypes.windll.user32.GetMonitorInfoW(monitor_handle, ctypes.byref(monitor_info))

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —è—Ä–∫–æ—Å—Ç—å
    ctypes.windll.dxva2.SetMonitorBrightness(monitor_handle, brightness_level)

def hand_write_fn(message):
    keyboard.write(f"{message.text}")


def change_password(message):
    try:
        os.system(f'net user Ivan {message.text}')
        bot.send_message(message.chat.id, f"–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–Ω –Ω–∞ {message.text}")
    except:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å")


def passwd_check(message):
    password = '–≤–∞—à_–ø–∞—Ä–æ–ª—å'
    if message.text == password:
        markup_admin = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        btn1_admin = types.KeyboardButton("üîê–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å")
        btn2_admin = types.KeyboardButton("üßπ–û—á–∏—Å—Ç–∏—Ç—å –ø–∞–ø–∫—É temp")
        btn3_admin = types.KeyboardButton("üß©–ú–µ–Ω—é")
        markup_admin.add(btn1_admin, btn2_admin, btn3_admin)
        bot.send_message(message.chat.id, "‚ö†Ô∏è–ê–¥–º–∏–Ω", reply_markup=markup_admin)
    else:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å, –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")



def change_bright(message):
    try:
        set_brightness(int(message.text))
    except Exception as e:
        # print(e)
        pass

def play_sound(message):
    try:
        engine = pyttsx3.init()
        ru_voice_id = "HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Speech/Voices/Tokens/TTS_MS_RU-RU_IRINA_11.0"
        engine.setProperty('voice', ru_voice_id)
        engine.say(str(message.text))
        engine.runAndWait()
        
        bot.send_message(message.chat.id, f"–°–æ–æ–±—â–µ–Ω–∏–µ {message.text} —É–¥–∞—á–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–∏–ª–æ—Å—å‚úÖ")
    except Exception as e:
        bot.send_message(message.chat.id, f"{e}")


def open_silka(message):
    try:
        webbrowser.open(f'{message.text}')
    except:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞')

def set_vol_func(message):
    Sound.volume_set(int(message.text))

def toast(message):
    toast = win10toast.ToastNotifier()
    toast.show_toast('PC CONTROL', f'{str(message.text)}', icon_path='main_ico.ico')

user_agent_list = [
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.5 Safari/605.1.1',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.3'
]



user_agent = random.choice(user_agent_list)
headers = {'User-Agent': user_agent}


def parse_yandex_search(message):
    url = f"https://www.yandex.ru/search/?text={str(message.text)}"

    response = requests.get(url, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')

    search_results = soup.find_all('a', class_='organic__url')
    descriptions = soup.find_all('div', class_='organic__text')


    for i in range(min(3, len(search_results))):
        link = search_results[i]['href']
        link = urlparse(link).netloc + urlparse(link).path  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –ø–æ–ª–Ω—ã–π URL-–∞–¥—Ä–µ—Å
        description = descriptions[i].text.strip()
        bot.send_message(message.chat.id, f"–°—Å—ã–ª–∫–∞: {link}")
        # bot.send_message(message.chat.id, f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}")


def delete_files_in_temp_folder(message):
    temp_folder = "C:\\Temp"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ temp

    deleted_count = 0
    not_deleted_count = 0

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ temp
        files = os.listdir(temp_folder)

        for file in files:
            file_path = os.path.join(temp_folder, file)
            try:
                # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                os.remove(file_path)
                deleted_count += 1
            except Exception as e:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
                bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file}: {e}")
                not_deleted_count += 1
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {e}")
        return

    bot.send_message(message.chat.id, f"–£–¥–∞–ª–µ–Ω–æ {deleted_count} —Ñ–∞–π–ª–æ–≤, –Ω–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ {not_deleted_count} —Ñ–∞–π–ª–æ–≤.")



def console_command(message):
    try:
        subprocess.run(message.text)
        bot.delete_message(message.chat.id, message.message_id+1)
    except:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')

def func_timer_shut(message):
    os.system(f'shutdown -s -f -t {int(message.text)}')

def main_func():
    
    p = pyaudio.PyAudio()
# for i in range(p.get_device_count()):
#     print(i, p.get_device_info_by_index(i)['name'])


    CHUNK = 1024
    FORMAT = pyaudio.paInt16
    CHANNELS = 2
    RATE = 44100
    RECORD_SECONDS = 3
    WAVE_OUTPUT_FILENAME = "output.ogg"
    p = pyaudio.PyAudio()
    stream = p.open(format=FORMAT,
                    channels=CHANNELS,
                    rate=RATE,
                    input=True,
                    input_device_index=1,
                    frames_per_buffer=CHUNK)
    # print("* recording")
    frames = []
    for i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
        data = stream.read(CHUNK)
        frames.append(data)
    # print("* done recording")
    stream.stop_stream()
    stream.close()
    p.terminate()

    wf = wave.open(WAVE_OUTPUT_FILENAME, 'wb')
    wf.setnchannels(CHANNELS)
    wf.setsampwidth(p.get_sample_size(FORMAT))
    wf.setframerate(RATE)
    wf.writeframes(b''.join(frames))
    wf.close()
    


# preview_text = Figlet(font='slant')
# print(preview_text.renderText('PC CONTROL'))
# print("–ë–æ—Ç –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É")
winsound.PlaySound('–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ.wav', winsound.SND_FILENAME)

bot = telebot.TeleBot(config.TOKEN)



def msg_create_image_def(message):
    if message.text == 'üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
        bot.delete_message(message.chat.id, message.message_id)
        markup_2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_media = types.KeyboardButton("üñºÔ∏è–ú–µ–¥–∏–∞")
        item_pc = types.KeyboardButton("‚öôÔ∏è–ü–ö")
        close_bot = types.KeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å –±–æ—Ç–∞")
        letter = types.KeyboardButton('‚úâÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ')
        chatGPT = types.KeyboardButton('üß†chatGPT')
        internet = types.KeyboardButton('üåê–ò–Ω—Ç–µ—Ä–Ω–µ—Ç')
        motivation = types.KeyboardButton('üí™–ú–æ—Ç–∏–≤–∞—Ü–∏—è')
        item_admin = types.KeyboardButton('‚ö†Ô∏è–ê–¥–º–∏–Ω')
        item_programms = types.KeyboardButton('üì¶–ü—Ä–æ–≥—Ä–∞–º–º—ã')
        markup_2.add(item_media, item_pc, motivation, item_programms, chatGPT, internet, item_admin)
        bot.send_message(message.chat.id, 'üß©–ú–µ–Ω—é', reply_markup=markup_2)
    else:
        # def translate_text(text, target_language='en'):
        #     translator = Translator()
        #     translated_text = translator.translate(text, dest=target_language)
        #     return translated_text.text
        
        # translated_text = translate_text(str(message))
        bot.send_message(message.chat.id, "–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É")
        response1 = openai.Image.create(
        prompt=message.text,
        n=1,
        size='256x256',
        response_format='b64_json'
        )

        with open('data.json', 'w') as file:
            json.dump(response1, file, indent=4, ensure_ascii=False)

        image_data = b64decode(response1['data'][0]['b64_json'])


        with open(f'generated_picture.png', 'wb') as file:
            file.write(image_data)

        bot.send_photo(message.chat.id, open('generated_picture.png', 'rb'))
        os.remove('generated_picture.png')

    


def chatGPT_fn(message):
    if message.text == 'üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
        bot.delete_message(message.chat.id, message.message_id)
        markup_2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_media = types.KeyboardButton("üñºÔ∏è–ú–µ–¥–∏–∞")
        item_pc = types.KeyboardButton("‚öôÔ∏è–ü–ö")
        close_bot = types.KeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å –±–æ—Ç–∞")
        letter = types.KeyboardButton('‚úâÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ')
        chatGPT = types.KeyboardButton('üß†chatGPT')
        internet = types.KeyboardButton('üåê–ò–Ω—Ç–µ—Ä–Ω–µ—Ç')
        motivation = types.KeyboardButton('üí™–ú–æ—Ç–∏–≤–∞—Ü–∏—è')
        markup_2.add(item_media, item_pc, letter).add(internet).add(chatGPT).add(motivation).add(close_bot)
        bot.send_message(message.chat.id, 'üß©–ú–µ–Ω—é', reply_markup=markup_2)

    elif message.text == 'üß†–°–≥–µ–Ω–∏—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ chatGPT':
        bot.delete_message(message.chat.id, message.message_id)
        msg_create_image = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞—Ä—Ç–∏–Ω–∫–∏')
        bot.register_next_step_handler(msg_create_image, msg_create_image_def)

    elif message.text == 'üß†–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å chatGPT':
        bot.delete_message(message.chat.id, message.message_id)
        msg1 = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(msg1, chatGPT_fn)



    else:
        bot.send_message(message.chat.id, '–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è')
        response = openai.Completion.create(
            model="text-davinci-003",
            prompt=f"{message.text}",
            temperature=1,
            max_tokens=200,
            top_p=1.0,
            frequency_penalty=0.5,
            presence_penalty=0.0,
        )
        bot.send_message(message.chat.id, response['choices'][0]['text'])
        msg2 = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∫ chatGPT')
        bot.register_next_step_handler(msg2, chatGPT_fn)


@bot.message_handler(commands=['start'])
def welcome(message):

    user_id = message.from_user.id
    if user_id == "your id telegram":
    # message1 = bot.send_message(message.chat.id, message.id)
    # bot.delete_message(message.chat.id, message1)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_media = types.KeyboardButton("üñºÔ∏è–ú–µ–¥–∏–∞")
        item_pc = types.KeyboardButton("‚öôÔ∏è–ü–ö")
        close_bot = types.KeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å –±–æ—Ç–∞")
        letter = types.KeyboardButton('‚úâÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ')
        chatGPT = types.KeyboardButton('üß†chatGPT')
        internet = types.KeyboardButton('üåê–ò–Ω—Ç–µ—Ä–Ω–µ—Ç')
        item_admin = types.KeyboardButton('‚ö†Ô∏è–ê–¥–º–∏–Ω')
        item_programms = types.KeyboardButton('üì¶–ü—Ä–æ–≥—Ä–∞–º–º—ã')
        # item1 = types.KeyboardButton("üîáMute")
        # item3 = types.KeyboardButton("üñºÔ∏è–°–∫—Ä–∏–Ω")
        # item4 = types.KeyboardButton("‚èÆÔ∏è")
        # item5 = types.KeyboardButton("‚è∏Ô∏è")
        # item6 = types.KeyboardButton("‚è≠Ô∏è")
        # item7 = types.KeyboardButton("- üîâ")
        # item8 = types.KeyboardButton("+ üîâ")
        # item9 = types.KeyboardButton("‚ÜªRestart")
        # item10 = types.KeyboardButton("‚≠ïShutdown")
        # item11 = types.KeyboardButton("ALT+TAB")
        # item12 = types.KeyboardButton("ALT+F4")
        # item2 = types.KeyboardButton("üîí–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å")
        # item13 = types.KeyboardButton("Discord Muteüîá")
        # item14 = types.KeyboardButton("ü™üHide all windows")
        # item15 = types.KeyboardButton("üéôÔ∏èMicrophone")

        markup.add(item_media, item_pc, item_programms, chatGPT, internet, item_admin)
        try:
            bot.send_photo(message.chat.id, open('–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–ª', 'rb'), caption=f'üëã–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å —Å—ç—Ä! \n\n\nüïí–í—Ä–µ–º—è: {the_time}, \n\n\nüå§Ô∏è–¢–µ–∫—É—â–∞—è –ü–æ–≥–æ–¥–∞: {weather.text}', reply_markup=markup)
        except:
            bot.send_photo(message.chat.id, open('–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–ª', 'rb'), caption=f'üëã–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å —Å—ç—Ä! \n\n\nüïí–í—Ä–µ–º—è: {the_time}, \n\n\nüå§Ô∏è–¢–µ–∫—É—â–∞—è –ü–æ–≥–æ–¥–∞: –ø–æ–∫–∞ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–∞', reply_markup=markup)
        bot.delete_message(message.chat.id, message.message_id)



    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É')
        incorrect_user = message.from_user.username 
        incorrect_user_id = message.from_user.id
        customtkinter.set_appearance_mode('dark')
        customtkinter.set_default_color_theme('blue')
        app = customtkinter.CTk()
        app.geometry('400x300')
        lbl = customtkinter.CTkLabel(master=app, text=f"@{incorrect_user} –ü—ã—Ç–∞–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –±–æ—Ç—É!")
        lbl2 = customtkinter.CTkLabel(master=app, text=f"ID: {incorrect_user_id}")
        lbl.place(relx=0.5, rely=0.5, anchor=tkinter.CENTER)
        lbl2.place(relx=0.5, rely=0.6, anchor=tkinter.CENTER)
        app.mainloop()   

# @bot.message_handler(content_types=['clear'])
# def clear(message):
#     bot.send_message(message.chat.id, message.id)
    # bot.send_message(chat_id=message.chat.id, message_thread_id=message1)





@bot.message_handler(content_types=['text'])
def greeting(message):

    user_id = message.from_user.id

    if message.chat.type == 'private':
        if user_id == "your id telegram":
            if message.text == 'üñºÔ∏è–ú–µ–¥–∏–∞':

                markup_media = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

                # item1_media = types.KeyboardButton("üîá")
                # item2_media = types.KeyboardButton("- üîâ")
                # item3_media = types.KeyboardButton("+ üîâ")
                # item4_media = types.KeyboardButton("‚èÆÔ∏è")
                # item5_media = types.KeyboardButton("‚è∏Ô∏è")
                # item6_media = types.KeyboardButton("‚è≠Ô∏è")
                # item7_media = types.KeyboardButton("üîá–î–∏—Å–∫–æ—Ä–¥")
                # item8_media = types.KeyboardButton("üéôÔ∏èM–∏–∫—Ä–æ—Ñ–æ–Ω")
                # item9_media = types.KeyboardButton("üîâ–°–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
                # item10_media = types.KeyboardButton("üß©–ú–µ–Ω—é")
                item_video = types.KeyboardButton('üé•–í–∏–¥–µ–æ')
                item_music = types.KeyboardButton('üéß–ú—É–∑—ã–∫–∞')
                item_menu = types.KeyboardButton('üß©–ú–µ–Ω—é')
                markup_media.add(item_video, item_music, item_menu)
                bot.send_message(message.chat.id, 'üñºÔ∏è–ú–µ–¥–∏–∞', reply_markup=markup_media)
                bot.delete_message(message.chat.id, message.message_id)


            elif message.text == '‚öôÔ∏è–ü–ö':
                markup_PC = types.ReplyKeyboardMarkup(resize_keyboard=True)

                # item1_PC = types.KeyboardButton("üñºÔ∏è–°–∫—Ä–∏–Ω")
                # item2_PC = types.KeyboardButton("üîÑ–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞")
                # item3_PC = types.KeyboardButton("üö´–í—ã–∫–ª—é—á–µ–Ω–∏–µ")
                # item4_PC = types.KeyboardButton("ALT+TAB") 
                # item5_PC = types.KeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å")
                # item6_PC = types.KeyboardButton("üîí–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å")
                # item7_PC = types.KeyboardButton("ü™ü–°–∫—Ä—ã—Ç—å –≤—Å–µ –æ–∫–Ω–∞")
                # item8_PC = types.KeyboardButton("üì∑–ö–∞–º–µ—Ä–∞")
                # item9_PC = types.KeyboardButton("‚è≥–¢–∞–π–º–µ—Ä –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö")
                # item10_PC = types.KeyboardButton('‚úâÔ∏è–°–º—Å –Ω–∞ —ç–∫—Ä–∞–Ω')
                # item11_PC = types.KeyboardButton("üñ•Ô∏è–ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
                # item12_PC = types.KeyboardButton("‚ùå–û—Ç–º–µ–Ω–∞ —Ç–∞–π–º–µ—Ä–∞")
                # item13_PC = types.KeyboardButton("üò¥–°–ø—è—â–∏–π —Ä–µ–∂–∏–º")
                # item14_PC = types.KeyboardButton('üß©–ú–µ–Ω—é')

                item1_PC = types.KeyboardButton('üñ•Ô∏è–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ü–ö')
                item2_PC = types.KeyboardButton("üîí–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å")
                item3_PC = types.KeyboardButton("‚òÄÔ∏è–Ø—Ä–∫–æ—Å—Ç—å")
                item4_PC = types.KeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å")
                # item5_PC = types.KeyboardButton('üéôÔ∏è–ó–∞–ø–∏—Å—å –ú–∏–∫—Ä–æ—Ñ–æ–Ω–∞')
                # item6_PC = types.KeyboardButton('üéôÔ∏è–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏')
                # item18_PC = types.KeyboardButton('üéôÔ∏è–û—Ç–∫–ª—é—á–∏—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω')
                item19_PC = types.KeyboardButton("üéôÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º")
                item7_PC = types.KeyboardButton('üñºÔ∏è–°–º–µ–Ω–∏—Ç—å –æ–±–æ–∏')
                item8_PC = types.KeyboardButton('‚úâÔ∏è–°–º—Å –Ω–∞ —ç–∫—Ä–∞–Ω')
                item9_PC = types.KeyboardButton('üì∑–ö–∞–º–µ—Ä–∞')
                item10_PC = types.KeyboardButton('üóëÔ∏è–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É')
                item11_PC = types.KeyboardButton('üñºÔ∏è–°–∫—Ä–∏–Ω')
                item12_PC = types.KeyboardButton("üîã–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏–µ–º –ü–ö")
                item13_PC = types.KeyboardButton('üìù–î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á')
                item14_PC = types.KeyboardButton('üß©–ú–µ–Ω—é')
                item15_PC = types.KeyboardButton("ü™ü–°–∫—Ä—ã—Ç—å –≤—Å–µ –æ–∫–Ω–∞")
                item16_PC = types.KeyboardButton("ALT+TAB")
                item17_PC = types.KeyboardButton("‚å®Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–≤–∞–π—Å–∞–º–∏ –ü–ö")




                markup_PC.add(item1_PC).add(item2_PC, item3_PC, item4_PC).add(item19_PC).add(item7_PC, item8_PC).add(item9_PC, item10_PC, item11_PC).add(item17_PC).add(item12_PC, item13_PC).add(item15_PC, item16_PC).add(item14_PC)
                bot.send_message(message.chat.id, '‚öôÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü–ö', reply_markup=markup_PC)
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == 'üîá':
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, "–°–¥–µ–ª–∞–Ω–Ω–æ")
                    # print("Copyright (c) 2014 - %d | Paradoxis" % date.today().year)
                Sound.mute()

                # elif message.text == 'üîâUnmute':
                #     bot.send_message(message.chat.id, "–°–¥–µ–ª–∞–Ω–Ω–æ")
                #     Sound.mute()l

            elif message.text == 'üñºÔ∏è–°–∫—Ä–∏–Ω':
                x = 1
                screenshot = pyscreeze.screenshot()
                screenshot.save('screen.png')
                with open('screen.png', 'rb') as file:
                    bot.send_photo(message.chat.id, file)
                time.sleep(.25)
                os.remove('screen.png')
                bot.delete_message(message.chat.id, message.message_id)
            elif message.text == '‚èÆÔ∏è':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send("previous track")
            elif message.text == '‚è≠Ô∏è':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send("next track")
            elif message.text == '‚è∏Ô∏è':
                bot.delete_message(message.chat.id, message.message_id)
                pyautogui.press('playpause')

            elif message.text == 'üéôÔ∏è–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏':
                bot.delete_message(message.chat.id, message.message_id)
                msg_play = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏")
                bot.register_next_step_handler(msg_play, play_sound)

            elif message.text == 'üîÑ–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞':

                markup_3 = types.InlineKeyboardMarkup(row_width=2)
                item1_mark3 = types.InlineKeyboardButton("–î–∞", callback_data='yes_restart')
                item2_mark3 = types.InlineKeyboardButton("–ù–µ—Ç", callback_data='no_restart')

                markup_3.add(item1_mark3, item2_mark3)
                bot.send_message(message.chat.id, '–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä?', reply_markup=markup_3)
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == 'üö´–í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö':
                bot.delete_message(message.chat.id, message.message_id)
                markup_2 = types.InlineKeyboardMarkup(row_width=2)
                item1_mark2 = types.InlineKeyboardButton("–î–∞", callback_data='yes_shut')
                item2_mark2 = types.InlineKeyboardButton("–ù–µ—Ç", callback_data='no_shut')
                markup_2.add(item1_mark2, item2_mark2)
                bot.send_message(message.chat.id, "–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä?", reply_markup=markup_2)

            elif message.text == 'üéôÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º':
                bot.delete_message(message.chat.id, message.message_id)
                markup_micro = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1_micro = types.KeyboardButton("üéôÔ∏è–ó–∞–ø–∏—Å—å –ú–∏–∫—Ä–æ—Ñ–æ–Ω–∞")
                btn2_micro = types.KeyboardButton("üéôÔ∏è–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏")
                btn3_micro = types.KeyboardButton("üéôÔ∏è–û—Ç–∫–ª—é—á–∏—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω")
                btn4_micro = types.KeyboardButton("üß©–ú–µ–Ω—é")
                btn5_micro = types.KeyboardButton("‚öôÔ∏è–ü–ö")
                markup_micro.add(btn1_micro).add(btn2_micro).add(btn4_micro, btn5_micro)
                bot.send_message(message.chat.id, 'üéôÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º', reply_markup=markup_micro)


            elif message.text == '‚å®Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–≤–∞–π—Å–∞–º–∏ –ü–ö':
                bot.delete_message(message.chat.id, message.message_id)
                markup_devices = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1_mouse = types.KeyboardButton("üñ±Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à—å—é")
                btn2_keyboard = types.KeyboardButton("‚å®Ô∏è–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞")
                btn3_monitor = types.KeyboardButton("üñ•Ô∏è–û—Ç–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä")
                btn4_menu = types.KeyboardButton('üß©–ú–µ–Ω—é')
                btn5_pc = types.KeyboardButton('‚öôÔ∏è–ü–ö')
                markup_devices.add(btn1_mouse).add(btn2_keyboard).add(btn3_monitor).add(btn4_menu, btn5_pc)
                bot.send_message(message.chat.id, '‚å®Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–≤–∞–π—Å–∞–º–∏ –ü–ö', reply_markup=markup_devices)

            elif message.text == 'üì¶–ü—Ä–æ–≥—Ä–∞–º–º—ã':
                bot.delete_message(message.chat.id, message.message_id)
                def get_random_smiley_from_file(file_path):
                    with open(file_path, "r") as file:
                        smileys = file.read().splitlines()
                    return random.choice(smileys)

                # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É hearts.txt
                file_path = "hearts.txt"

                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–º–∞–π–ª–∏–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞
                random_smiley = get_random_smiley_from_file(file_path)

                markup_programms = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1_prog = types.KeyboardButton(f"‚ù§Ô∏èChrome")
                item2_prog = types.KeyboardButton(f"üíôTelegram")
                item3_prog = types.KeyboardButton(f"üñ§VS Code")
                item4_prog = types.KeyboardButton(f"üíõDiscord")
                item5_prog = types.KeyboardButton(f"ü§çNotion")
                item6_prog = types.KeyboardButton(f"üíúEpic Games")
                item7_prog = types.KeyboardButton(f"üíöSteam")
                item8_prog = types.KeyboardButton("üß©–ú–µ–Ω—é")
                markup_programms.add(item1_prog, item2_prog, item3_prog, item4_prog, item5_prog, item6_prog, item7_prog).add(item8_prog)
                bot.send_message(message.chat.id, "üì¶–ü—Ä–æ–≥—Ä–∞–º–º—ã", reply_markup=markup_programms)

            # elif message.text == '‚ù§Ô∏èChrome':
            #     subprocess.Popen("C:\Program Files\Google\Chrome\Application\chrome.exe")
            #     bot.send_message(message.chat.id, "‚ù§Ô∏èChrome –±—ã–ª –∑–∞–ø—É—â–µ–Ω")
            elif message.text == 'üíôTelegram':
                subprocess.Popen("C:\\Users\\Ivan\\AppData\\Roaming\\Telegram Desktop\\Telegram.exe")
                bot.send_message(message.chat.id, "üíôTelegram –±—ã–ª –∑–∞–ø—É—â–µ–Ω")
            elif message.text == 'üñ§VS Code':
                subprocess.Popen("C:\\Users\\Ivan\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe")
                bot.send_message(message.chat.id, "üñ§VS Code –±—ã–ª –∑–∞–ø—É—â–µ–Ω")
            elif message.text == 'üíõDiscord':
                subprocess.Popen("C:\\Users\\Ivan\\AppData\\Local\\Discord\\Update.exe --processStart Discord.exe")
                bot.send_message(message.chat.id, "üíõDiscord –±—ã–ª –∑–∞–ø—É—â–µ–Ω")
            elif message.text == 'ü§çNotion':
                subprocess.Popen("C:\\Users\\Ivan\\AppData\\Local\\Programs\\Notion\\Notion.exe")
                bot.send_message(message.chat.id, "ü§çNotion –±—ã–ª –∑–∞–ø—É—â–µ–Ω")
            elif message.text == 'üíúEpic Games':
                subprocess.Popen("C:\\Program Files (x86)\\Epic Games\\Launcher\\Portal\\Binaries\\Win32\\EpicGamesLauncher.exe")
                bot.send_message(message.chat.id, "üíúEpic Games –±—ã–ª –∑–∞–ø—É—â–µ–Ω")
            elif message.text == 'üíöSteam':
                subprocess.Popen("C:\\Program Files (x86)\\Steam\\steam.exe")
                bot.send_message(message.chat.id, "üíöSteam –±—ã–ª –∑–∞–ø—É—â–µ–Ω")

            elif message.text == '‚ö†Ô∏è–ê–¥–º–∏–Ω':
                markup_admin = types.ReplyKeyboardMarkup(resize_keyboard=True)
                passwd = bot.send_message(message.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–∏–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
                bot.register_next_step_handler(passwd, passwd_check)
                # btn1_admin = types.KeyboardButton("üîê–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å")
                # btn1_admin = types.KeyboardButton("")
                # btn1_admin = types.KeyboardButton("")
                # btn1_admin = types.KeyboardButton("")
                


            elif message.text == 'üñ±Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à—å—é':
                bot.delete_message(message.chat.id, message.message_id)
                markup_mouse = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1_right = types.KeyboardButton("–õ–ö–ú")
                btn2_left = types.KeyboardButton("–ü–ö–ú")
                btn3_up = types.KeyboardButton("üîº")
                btn4_left = types.KeyboardButton("‚óÄÔ∏è")
                btn5_down = types.KeyboardButton("üîΩ")
                btn6_right = types.KeyboardButton("‚ñ∂Ô∏è")
                btn7_menu = types.KeyboardButton("üß©–ú–µ–Ω—é")
                btn8_devices = types.KeyboardButton("‚å®Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–≤–∞–π—Å–∞–º–∏ –ü–ö")
                markup_mouse.add(btn1_right, btn2_left).add(btn3_up).add(btn4_left, btn5_down, btn6_right).add(btn7_menu, btn8_devices)
                bot.send_message(message.chat.id, 'üñ±Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à—å—é', reply_markup=markup_mouse)

            elif message.text == '‚å®Ô∏è–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞':
                bot.delete_message(message.chat.id, message.message_id)
                markup_keyboardong = types.ReplyKeyboardMarkup(resize_keyboard=True)
                betn1 = types.KeyboardButton("‚úçÔ∏è–í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞")
                betn2 = types.KeyboardButton("üî†–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏")
                betn3 = types.KeyboardButton("üß©–ú–µ–Ω—é")
                betn4 = types.KeyboardButton("‚å®Ô∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–≤–∞–π—Å–∞–º–∏ –ü–ö")
                markup_keyboardong.add(betn1).add(betn2).add(betn3, betn4)
                bot.send_message(message.chat.id, "‚å®Ô∏è–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞", reply_markup=markup_keyboardong)

            elif message.text == "‚úçÔ∏è–í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞":
                bot.delete_message(message.chat.id, message.message_id)
                hand_write = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                bot.register_next_step_handler(hand_write, hand_write_fn)

            elif message.text == 'üî†–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏':
                bot.delete_message(message.chat.id, message.message_id)
                msg_press = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞–≤–∏—à—É, –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º")
                bot.register_next_step_handler(msg_press, press)

            elif message.text == 'üñ•Ô∏è–û—Ç–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä':
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, "–ú–æ–Ω–∏—Ç–æ—Ä –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω")
                def is_monitor_on():
                    power_status = ctypes.c_ulong()
                    if ctypes.windll.kernel32.GetSystemPowerStatus(ctypes.pointer(power_status)):
                        monitor_on = bool(power_status.value & 0x00000001)
                        return monitor_on

                    return True
                def toggle_monitor():
                    monitor_on = is_monitor_on()

                    if monitor_on:
                        ctypes.windll.user32.SendMessageW(0xFFFF, 0x112, 0xF170, 2)
                    else:
                        ctypes.windll.user32.SendMessageW(0xFFFF, 0x112, 0xF170, -1)

                toggle_monitor()


            elif message.text == '–≤–∫–ª':
                bot.delete_message(message.chat.id, message.message_id)
                ctypes.windll.user32.SendMessageW(0xFFFF, 0x112, 0xF170, -1)
                bot.send_message(message.chat.id, "–ú–æ–Ω–∏—Ç–æ—Ä –±—ã–ª –≤–∫–ª—é—á–µ–Ω")


            elif message.text == '–õ–ö–ú':
                bot.delete_message(message.chat.id, message.message_id)
                mouse.click('left')

            elif message.text == '–ü–ö–ú':
                bot.delete_message(message.chat.id, message.message_id)
                mouse.click('right')

            elif message.text == 'üîº':
                bot.delete_message(message.chat.id, message.message_id)
                current_x, current_y = pyautogui.position()
                pyautogui.move(0, -50, duration=0.1)

            elif message.text == 'üîΩ':
                bot.delete_message(message.chat.id, message.message_id)
                current_x, current_y = pyautogui.position()
                pyautogui.move(0, 50, duration=0.1)

            elif message.text == '‚ñ∂Ô∏è':
                bot.delete_message(message.chat.id, message.message_id)
                current_x, current_y = pyautogui.position()
                pyautogui.move(50, 0, duration=0.1)

            elif message.text == '‚óÄÔ∏è':
                bot.delete_message(message.chat.id, message.message_id)
                current_x, current_y = pyautogui.position()
                pyautogui.move(-50, 0, duration=0.1)


            elif message.text == '- üîâ':
                bot.delete_message(message.chat.id, message.message_id)
                Sound.volume_down()
                    # bot.send_message(message.chat.id, "–°–¥–µ–ª–ª–∞–Ω–æ")

            elif message.text == '+ üîâ':
                bot.delete_message(message.chat.id, message.message_id)
                Sound.volume_up()
                    # bot.send_message(message.chat.id, "–°–¥–µ–ª–ª–∞–Ω–æ")

            elif message.text == 'ALT+TAB':
                pyautogui.keyDown("alt")
                time.sleep(.2)
                pyautogui.press("tab")
                time.sleep(.2)
                pyautogui.keyUp("alt")
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == '‚ùå–ó–∞–∫—Ä—ã—Ç—å':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send("alt+F4, space")
                bot.send_message(message.chat.id, "–¢–µ–∫—É—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ –∑–∞–∫—Ä—ã—Ç–æ")

            elif message.text == 'üîí–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å':
                bot.delete_message(message.chat.id, message.message_id)
                ctypes.windll.user32.LockWorkStation()

            elif message.text == 'üîá–î–∏—Å–∫–æ—Ä–¥':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send("F8")

            elif message.text == 'ü™ü–°–∫—Ä—ã—Ç—å –≤—Å–µ –æ–∫–Ω–∞':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send("win+d")

            elif message.text == 'üéôÔ∏è–ó–∞–ø–∏—Å—å –ú–∏–∫—Ä–æ—Ñ–æ–Ω–∞':
                bot.delete_message(message.chat.id, message.message_id)
                main_func()
                bot.send_audio(message.chat.id, open('output.ogg', 'rb'))
                os.remove('output.ogg')

            elif message.text == 'üß©–ú–µ–Ω—é':
                bot.delete_message(message.chat.id, message.message_id)
                markup_2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item_media = types.KeyboardButton("üñºÔ∏è–ú–µ–¥–∏–∞")
                item_pc = types.KeyboardButton("‚öôÔ∏è–ü–ö")
                close_bot = types.KeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å –±–æ—Ç–∞")
                letter = types.KeyboardButton('‚úâÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ')
                chatGPT = types.KeyboardButton('üß†chatGPT')
                internet = types.KeyboardButton('üåê–ò–Ω—Ç–µ—Ä–Ω–µ—Ç')
                item_admin = types.KeyboardButton('‚ö†Ô∏è–ê–¥–º–∏–Ω')
                item_programms = types.KeyboardButton('üì¶–ü—Ä–æ–≥—Ä–∞–º–º—ã')
                markup_2.add(item_media, item_pc, item_programms, chatGPT, internet, item_admin)
                bot.send_message(message.chat.id, 'üß©–ú–µ–Ω—é', reply_markup=markup_2)


            elif message.text == 'üñ•Ô∏è–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ü–ö':
                bot.delete_message(message.chat.id, message.message_id)
                pythoncom.CoInitialize()
                computer = wmi.WMI()
                computer_info = computer.Win32_ComputerSystem()[0]
                os_info = computer.Win32_OperatingSystem()[0]
                proc_info = computer.Win32_Processor()[0]
                gpu_info = computer.Win32_VideoController()[0]

                os_name = os_info.Name.encode('utf-8').split(b'|')[0]
                os_version = ' '.join([os_info.Version, os_info.BuildNumber])
                system_ram = float(os_info.TotalVisibleMemorySize) / 1048576  # KB to GB
                dict_system = {
                    'OS': 'OS Name: {0}'.format(os_name.decode('utf-8')),
                    'OS VERS': 'OS Version: {0}'.format(os_version),
                    'CPUSH': 'CPU: {0}'.format(proc_info.Name),
                    'RAMSH': 'RAM: {0} GB'.format(math.ceil(system_ram)),
                    'GRAPHIC': 'Graphics Card: {0}'.format(gpu_info.Name)
                }
                    # bot.send_message(message.chat.id, f'{dict_system.items()} + \n')
                dict_system_items = dict_system.items()

                for key, value in dict_system_items:
                    bot.send_message(message.chat.id, value)

            elif message.text == "üì∑–ö–∞–º–µ—Ä–∞":
                try:
                    cap = cv2.VideoCapture(0)
                    for i in range(1, 2):
                        ret, img = cap.read()
                        cv2.imwrite('camrec.png', img)
                        # if cv2.waitKey(10) == 27:
                        #     break

                    cap.release()
                    cv2.destroyAllWindows()
                    bot.send_video(message.chat.id, open('camrec.png', 'rb'))
                    os.remove('camrec.png')
                    bot.delete_message(message.chat.id, message.message_id)

                except cv2.error:
                    bot.delete_message(message.chat.id, message.message_id)
                    bot.send_message(message.chat.id, '–ö–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')

            elif message.text == '‚è≥–¢–∞–π–º–µ—Ä –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö':
                bot.delete_message(message.chat.id, message.message_id)
                timer_shut = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö')
                bot.register_next_step_handler(timer_shut, func_timer_shut)

            elif message.text == '‚ùå–û—Ç–º–µ–Ω–∞ —Ç–∞–π–º–µ—Ä–∞':
                bot.delete_message(message.chat.id, message.message_id)
                os.system('shutdown -a')

            elif message.text == 'üñ•Ô∏è–ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞':
                bot.delete_message(message.chat.id, message.message_id)
                msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É')
                bot.register_next_step_handler(msg, console_command)

            elif message.text == '‚úâÔ∏è–°–º—Å –Ω–∞ —ç–∫—Ä–∞–Ω':
                bot.delete_message(message.chat.id, message.message_id)
                send_toast = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏')
                bot.register_next_step_handler(send_toast, toast)

            elif message.text == 'üîâ–°–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ':
                bot.delete_message(message.chat.id, message.message_id)
                my_set_volume = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
                bot.register_next_step_handler(my_set_volume, set_vol_func)

            elif message.text == '‚ùå–ó–∞–∫—Ä—ã—Ç—å –±–æ—Ç–∞':
                bot.delete_message(message.chat.id, message.message_id)
                bot.stop_polling()
                sys.exit(1)
                winsound.PlaySound('–û—Ç–∫–ª—é—á–∞—é –ø–∏—Ç–∞–Ω–∏–µ.wav', winsound.SND_FILENAME)

            elif message.text == 'üò¥–°–ø—è—â–∏–π —Ä–µ–∂–∏–º':
                subprocess.run(['rundll32.exe', 'powrprof.dll,SetSuspendState', '0', '1', '0'])
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == '‚úâÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ':
                try:
                    bot.send_photo(message.chat.id, open('hi-pic.jpg', 'rb'), caption=f'üëã–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å —Å—ç—Ä! \n\n\nüïí–í—Ä–µ–º—è: {the_time}, \n\n\nüå§Ô∏è–¢–µ–∫—É—â–∞—è –ü–æ–≥–æ–¥–∞: {weather.text}')
                except:
                                bot.send_photo(message.chat.id, open('hi-pic.jpg', 'rb'), caption=f'üëã–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å —Å—ç—Ä! \n\n\nüïí–í—Ä–µ–º—è: {the_time}, \n\n\nüå§Ô∏è–¢–µ–∫—É—â–∞—è –ü–æ–≥–æ–¥–∞: –ø–æ–∫–∞ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–∞')
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == 'üß†chatGPT':
                bot.delete_message(message.chat.id, message.message_id)
                markup_4 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                btn_1_openai = types.KeyboardButton("üß†–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å chatGPT")
                btn_2_openai = types.KeyboardButton("üß†–°–≥–µ–Ω–∏—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ chatGPT")
                btn_3_openai = types.KeyboardButton("üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                markup_4.add(btn_1_openai, btn_2_openai, btn_3_openai)
                bot.send_message(message.chat.id, 'üß†chatGPT', reply_markup=markup_4)
                # bot.register_next_step_handler(chatGPT_msg, chatGPT_fn)

            elif message.text == 'üß†–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å chatGPT':
                bot.delete_message(message.chat.id, message.message_id)
                markup_10 = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1_chat = types.KeyboardButton("üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                markup_10.add(btn1_chat)
                msg1 = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å", reply_markup=markup_10)
                bot.register_next_step_handler(msg1, chatGPT_fn)

            elif message.text == 'üß†–°–≥–µ–Ω–∏—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ chatGPT':
                bot.delete_message(message.chat.id, message.message_id)
                markup_11 = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn11_chat = types.KeyboardButton("üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
                markup_11.add(btn11_chat)
                msg2 = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞—Ä—Ç–∏–Ω–∫–∏", reply_markup=markup_11)
                bot.register_next_step_handler(msg2, msg_create_image_def)  

            elif message.text == 'üéß–ú—É–∑—ã–∫–∞':
                markup_media_keyboard = types.ReplyKeyboardMarkup()
                item0_media = types.KeyboardButton("üîâ–ó–≤—É–∫")
                item1_media = types.KeyboardButton("üîá")
                item2_media = types.KeyboardButton("- üîâ")
                item3_media = types.KeyboardButton("+ üîâ")
                item4_media = types.KeyboardButton("‚èÆÔ∏è")
                item5_media = types.KeyboardButton("‚è∏Ô∏è")
                item6_media = types.KeyboardButton("‚è≠Ô∏è")
                item7_media = types.KeyboardButton("üîá–î–∏—Å–∫–æ—Ä–¥")
                item10_media = types.KeyboardButton('üß©–ú–µ–Ω—é')
                markup_media_keyboard.add(item0_media).add(item2_media, item1_media, item3_media, item4_media, item5_media, item6_media, item7_media).add(item10_media)
                bot.send_message(message.chat.id, 'üéß–ú—É–∑—ã–∫–∞', reply_markup=markup_media_keyboard)

            elif message.text == 'üé•–í–∏–¥–µ–æ':
                markup_video = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1_video = types.KeyboardButton("üîâ–ó–≤—É–∫")
                item2_video = types.KeyboardButton('üîà')
                item3_video = types.KeyboardButton('üîá')
                item4_video = types.KeyboardButton('üîä')
                item5_video = types.KeyboardButton('‚¨ÖÔ∏è')
                item6_video = types.KeyboardButton('‚è∏Ô∏è')
                item7_video = types.KeyboardButton('‚û°Ô∏è')
                item8_video = types.KeyboardButton('‚óÄÔ∏è–í–∏–¥–µ–æ')
                item9_video = types.KeyboardButton('–í–∏–¥–µ–æ‚ñ∂Ô∏è')
                item10_video = types.KeyboardButton('üñ•Ô∏è–í–æ –≤–µ—Å—å —ç–∫—Ä–∞–Ω')
                item11_video = types.KeyboardButton('üìé–û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É')
                item12_video = types.KeyboardButton('üß©–ú–µ–Ω—é')
                item13_video = types.KeyboardButton('üñºÔ∏è–ú–µ–¥–∏–∞')
                markup_video.add(item1_video).add(item2_video, item3_video, item4_video, item5_video, item6_video, item7_video).add(item8_video, item9_video).add(item10_video).add(item11_video).add(item12_video, item13_video)
                bot.send_message(message.chat.id, 'üé•–í–∏–¥–µ–æ', reply_markup=markup_video)


            elif message.text == '‚óÄÔ∏è–í–∏–¥–µ–æ':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send('shift+p')

            elif message.text == '–í–∏–¥–µ–æ‚ñ∂Ô∏è':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send('shift+n')

            elif message.text == 'üñ•Ô∏è–í–æ –≤–µ—Å—å —ç–∫—Ä–∞–Ω':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send('f')

            elif message.text == '‚¨ÖÔ∏è':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send('left')

            elif message.text == '‚û°Ô∏è':
                bot.delete_message(message.chat.id, message.message_id)
                keyboard.send('right')

            elif message.text == 'üìé–û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É':
                bot.delete_message(message.chat.id, message.message_id)
                msg_silka = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É")
                bot.register_next_step_handler(msg_silka, open_silka)

            elif message.text == 'üîà':
                bot.delete_message(message.chat.id, message.message_id)
                Sound.volume_down()

            elif message.text == 'üîä':
                bot.delete_message(message.chat.id, message.message_id)
                Sound.volume_up()

            elif message.text == 'üîâ–ó–≤—É–∫':
                bot.delete_message(message.chat.id, message.message_id)
                my_set_volume = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
                bot.register_next_step_handler(my_set_volume, set_vol_func)

            elif message.text == '‚òÄÔ∏è–Ø—Ä–∫–æ—Å—Ç—å':
                bot.delete_message(message.chat.id, message.message_id)
                markup_bright = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1_bright = types.KeyboardButton("‚¨áÔ∏è–ú–µ–Ω—å—à–µ")
                item2_bright = types.KeyboardButton("‚òÄÔ∏è100%")
                item3_bright = types.KeyboardButton("‚¨ÜÔ∏è–ë–æ–ª—å—à–µ")
                item4_bright = types.KeyboardButton("‚òÄÔ∏è0%")
                item5_bright = types.KeyboardButton("‚òÄÔ∏è25%")
                item6_bright = types.KeyboardButton("‚òÄÔ∏è50%")
                item7_bright = types.KeyboardButton("‚òÄÔ∏è75%")
                item8_bright = types.KeyboardButton("üß©–ú–µ–Ω—é")
                item9_bright = types.KeyboardButton("‚öôÔ∏è–ü–ö")
                #markup_bright.add(item1_bright, item2_bright, item3_bright).add(item4_bright, item5_bright, item6_bright, item7_bright).add(item8_bright, item9_bright)
                markup_bright.row(item1_bright, item2_bright, item3_bright)
                markup_bright.row(item4_bright, item5_bright, item6_bright, item7_bright)
                markup_bright.row(item8_bright, item9_bright)
                bot.send_message(message.chat.id, "‚òÄÔ∏è–Ø—Ä–∫–æ—Å—Ç—å", reply_markup=markup_bright)

            elif message.text == '‚òÄÔ∏è100%':
                bot.delete_message(message.chat.id, message.message_id)
                bright_100 = 100
                set_brightness(bright_100)

            elif message.text == '‚¨áÔ∏è–ú–µ–Ω—å—à–µ':
                bot.delete_message(message.chat.id, message.message_id)
                decrease_brightness()

            elif message.text == '‚¨ÜÔ∏è–ë–æ–ª—å—à–µ':
                bot.delete_message(message.chat.id, message.message_id)
                increase_brightness()

            elif message.text == "‚òÄÔ∏è0%":
                bot.delete_message(message.chat.id, message.message_id)
                bright_0 = 0
                set_brightness(bright_0)

            elif message.text == "‚òÄÔ∏è25%":
                bot.delete_message(message.chat.id, message.message_id)
                bright_25 = 25
                set_brightness(bright_25)

            elif message.text == "‚òÄÔ∏è50%":
                bot.delete_message(message.chat.id, message.message_id)
                bright_50 = 50
                set_brightness(bright_50)
            elif message.text == '‚òÄÔ∏è75%':
                bot.delete_message(message.chat.id, message.message_id)
                bright_75 = 75
                set_brightness(bright_75)

            elif message.text == 'üßπ–û—á–∏—Å—Ç–∏—Ç—å –ø–∞–ø–∫—É temp':
                bot.delete_message(message.chat.id, message.message_id)


            elif message.text == 'üñºÔ∏è–°–º–µ–Ω–∏—Ç—å –æ–±–æ–∏':
                bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω—É')


            elif message.text == 'üîã–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏–µ–º –ü–ö':
                markup_pitanie = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1_pit = types.KeyboardButton('üò¥–°–ø—è—â–∏–π —Ä–µ–∂–∏–º')
                btn2_pit = types.KeyboardButton('üí§–ì–∏–±–µ—Ä–Ω–∞—Ü–∏—è')
                btn3_pit = types.KeyboardButton('üîÑ–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞')
                btn4_pit = types.KeyboardButton('üö´–í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö')
                btn5_pit = types.KeyboardButton('‚è≥–¢–∞–π–º–µ—Ä –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö')
                btn6_pit = types.KeyboardButton('‚ùå–û—Ç–º–µ–Ω–∞ —Ç–∞–π–º–µ—Ä–∞')
                btn7_pit = types.KeyboardButton('üß©–ú–µ–Ω—é')
                btn8_pit = types.KeyboardButton('‚öôÔ∏è–ü–ö')
                markup_pitanie.add(btn1_pit, btn2_pit, btn3_pit).add(btn4_pit).add(btn5_pit).add(btn6_pit).add(btn7_pit, btn8_pit)
                bot.send_message(message.chat.id, 'üîã–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏–µ–º –ü–ö', reply_markup=markup_pitanie)
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == 'üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
                bot.delete_message(message.chat.id, message.message_id)
                markup_2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item_media = types.KeyboardButton("üñºÔ∏è–ú–µ–¥–∏–∞")
                item_pc = types.KeyboardButton("‚öôÔ∏è–ü–ö")
                close_bot = types.KeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å –±–æ—Ç–∞")
                letter = types.KeyboardButton('‚úâÔ∏è–°–æ–æ–±—â–µ–Ω–∏–µ')
                chatGPT = types.KeyboardButton('üß†chatGPT')
                internet = types.KeyboardButton('üåê–ò–Ω—Ç–µ—Ä–Ω–µ—Ç')
                item_admin = types.KeyboardButton('‚ö†Ô∏è–ê–¥–º–∏–Ω')
                item_programms = types.KeyboardButton('üì¶–ü—Ä–æ–≥—Ä–∞–º–º—ã')
                markup_2.add(item_media, item_pc, item_programms, chatGPT, internet, item_admin)
                bot.send_message(message.chat.id, 'üß©–ú–µ–Ω—é', reply_markup=markup_2)

            elif message.text == 'üí§–ì–∏–±–µ—Ä–Ω–∞—Ü–∏—è':
                subprocess.run(['shutdown', '/h'])
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == 'üîê–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å':
                bot.delete_message(message.chat.id, message.message_id)
                change_pswd = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å')
                bot.register_next_step_handler(change_pswd, change_password)


            elif message.text == 'üìù–î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á':
                keyboard.send('ctrl+shift+esc')
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == 'üóëÔ∏è–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É':
                SHEmptyRecycleBin = ctypes.windll.shell32.SHEmptyRecycleBinW
                SHEmptyRecycleBin(None, None, 1)
                bot.send_message(message.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞')
                bot.delete_message(message.chat.id, message.message_id)

            elif message.text == 'üåê–ò–Ω—Ç–µ—Ä–Ω–µ—Ç':
                msg_internet = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å')
                bot.register_next_step_handler(msg_internet, parse_yandex_search)



        else:
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É')




@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    file_info = bot.get_file(message.photo[-1].file_id)
    file_path = file_info.file_path

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    downloaded_file = bot.download_file(file_path)

    # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∏ –∏–º—è —Ñ–∞–π–ª–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã —Ö–æ—Ç–∏–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
    save_path = 'image_from_user.jpg'

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    with open(save_path, 'wb') as new_file:
        new_file.write(downloaded_file)


    image_path = 'C:/Ivan/programming/PC_CONTOL_–∏—Å—Ö–æ–¥–Ω–∏–∫/image_from_user.jpg'
    ctypes.windll.user32.SystemParametersInfoW(20, 0, image_path, 3)




@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'yes_shut':
                os.system('shutdown -s -f -t 0')

                markup_4 = types.InlineKeyboardMarkup(row_width=1)
                item_1_mark4 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–∫–ª—é—á–µ–Ω–∏–µ", callback_data='are_you_sure')
                markup_4.add(item_1_mark4)
                bot.delete_message(call.message.chat.id, call.message.message_id-1)

                if call.data == 'are_you_sure':
                    os.system('shutdown -a')
                    bot.send_message(call.message.chat.id, "–í—ã–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=None)
                    bot.delete_message(call.message.chat.id, call.message.message_id-1)

            elif call.data == 'no_shut':
                bot.send_message(call.message.chat.id, "–í—ã–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–Ω–µ–Ω–æ")
                bot.delete_message(call.message.chat.id, call.message.message_id-1)




    except Exception as e:
        # print(repr(e))
        pass


    try:
        if call.message:
            if call.data == 'yes_restart':
                bot.delete_message(call.message.chat.id, call.message.message_id-1)
                os.system("shutdown /r /t 00")  
            elif call.data == 'no_restart':
                bot.send_message(call.message.chat.id, "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
                bot.delete_message(call.message.chat.id, call.message.message_id-1)

            



    except Exception as e1:
        # print(repr(e1))
        pass
bot.polling(none_stop=True)